# Generated by Django 4.2.24 on 2025-09-24 18:03

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("first_name", models.CharField(blank=True, max_length=60)),
                ("last_name", models.CharField(max_length=100)),
                ("initials", models.CharField(blank=True, max_length=30)),
                ("email", models.EmailField(max_length=100, unique=True)),
                ("status", models.CharField(choices=[("ACTIVE", "Active"), ("INACTIVE", "Inactive")], default="ACTIVE", max_length=8)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "users",
            },
        ),
        migrations.CreateModel(
            name="UserAddress",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("address_type", models.CharField(choices=[("HOME", "Home"), ("INVOICE", "Invoice"), ("POST", "Post"), ("WORK", "Work")], max_length=7)),
                ("valid_from", models.DateTimeField()),
                ("post_code", models.CharField(max_length=6)),
                ("city", models.CharField(max_length=60)),
                ("country_code", models.CharField(max_length=3)),
                ("street", models.CharField(max_length=100)),
                ("building_number", models.CharField(max_length=60)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("user", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name="addresses", to="users.user")),
            ],
            options={
                "db_table": "users_addresses",
                "unique_together": {("user", "address_type", "valid_from")},
            },
        ),
    ]
